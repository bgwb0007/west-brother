{{>layout/header}}
<link href="/css/app/daily.css" rel="stylesheet">


<p>캐릭터를 마우스로 이동해 주세요.</p>
<div id="room">
    <div id="shoesImage" class="droppableArea rounded-circle">
        <img src="image/app/shoesAll-bg.png" width="150px">
    </div>
    <div id="tennisImage" class="droppableArea rounded-circle">
        <img src="image/app/tennisAll-bg2.png" width="130px">
    </div>
    <div id="deskImage" class="droppableArea rounded-circle">
        <img src="image/app/desk.png" width="120px">
    </div>
</div>

<div>
    <button type="button" onclick="getShoesList('ALL');">shoes</button>
    <button type="button" onclick="getInstagramList()">tennis</button>
    <button type="button" onclick="">dev</button>
</div>
<div id="contents">
    <div class="infoMsgDiv">
        <img src="image/app/character3.png" id="ball">
    </div>
</div>
<script>
    var shoesList;
    var instagramList;

    let currentDroppable = null;

    ball.onmousedown = function(event) {

        let shiftX = event.clientX - ball.getBoundingClientRect().left;
        let shiftY = event.clientY - ball.getBoundingClientRect().top;

        ball.style.position = 'absolute';
        ball.style.zIndex = 1000;
        document.body.append(ball);

        moveAt(event.pageX, event.pageY);

        function moveAt(pageX, pageY) {
            ball.style.left = pageX - shiftX + 'px';
            ball.style.top = pageY - shiftY + 'px';
        }

        function onMouseMove(event) {
            moveAt(event.pageX, event.pageY);

            ball.hidden = true;
            let elemBelow = document.elementFromPoint(event.clientX, event.clientY);
            ball.hidden = false;

            // 마우스 이벤트는 윈도우 밖으로 트리거 될 수 없습니다.(공을 윈도우 밖으로 드래그 했을 때)
            // clientX∙clientY가 윈도우 밖에 있으면, elementFromPoint는 null을 반환합니다.
            if (!elemBelow) return;

            // 잠재적으로 드롭 할 수 있는 요소를 'droppable' 클래스로 지정합니다.(다른 로직 가능)
            let droppableBelow = elemBelow.closest('.droppableArea');
            if (currentDroppable != droppableBelow) {
                // 들어오거나 날리거나...
                // 참고: 두 값 모두 null일 수 있습니다.
                //   currentDroppable=null 이벤트 전에 놓을 수 있는 요소 위에 있지 않다면(예: 빈 공간)
                //   droppableBelow=null 이벤트 동안 놓을 수 있는 요소 위에 있지 않다면
                if (currentDroppable) { // null when we were not over a droppable before this event
                    // '날아가는 것'을 처리하는 로직(강조 제거)
                    leaveDroppable(currentDroppable);

                }
                currentDroppable = droppableBelow;
                if (currentDroppable) { // null if we're not coming over a droppable now
                    // (maybe just left the droppable)
                    // '들어오는 것'을 처리하는 로직
                    enterDroppable(currentDroppable);
                }
            }
        }

        document.addEventListener('mousemove', onMouseMove);

        ball.onmouseup = function() {
            document.removeEventListener('mousemove', onMouseMove);
            ball.onmouseup = null;
        };

    };
    function enterDroppable(elem) {
        elem.style.background = 'pink';
        if (elem.id == 'shoesImage'){
            onShoes();
        }else if(elem.id == 'tennisImage'){
            onTennis();
        }else if(elem.id == 'deskImage'){
            onDesk();
        }
    }
    function leaveDroppable(elem) {
        elem.style.background = '';
        // $('#contents').text('');
    }
    ball.ondragstart = function() {
        return false;
    };
    
    function onShoes(){
        $('#contents').text('##### shoes contents #####');
        ball.src = '/image/app/character3.png';
        ball.width = 130;
        getShoesList('ALL');
    }
    function onTennis(){
        $('#contents').text('##### tennis contents #####');
        ball.src = '/image/app/onTennis.png';
        ball.width = 130;
        getInstagramList();
    }
    function onDesk(){
        $('#contents').text('##### desk contents #####');
        ball.src = '/image/app/character3.png';
        ball.width = 130;

    }

    function getShoesList(category){
        if(shoesList != undefined){
            $('#contents').text('##### shoes contents #####');
            loadShoesList(sortShoesList(shoesList, category), category);
            return;
        }
        var successCallBack = function (ret){
            $('#contents').text('##### shoes contents #####');
            shoesList = ret;
            loadShoesList(sortShoesList(shoesList, category), category);
        }

        let url = '/api/v1/shoes'
        wbGetJson(successCallBack,function (ret){
            console.log("실패함수실행##",ret);
            alert('오류로 인해 실패했습니다.');
            debugger;
        },url);
    }
    function loadShoesList(list,category){
        $('#contents').text('##### shoes contents #####');
        appendShoes(list, category);
        addCategoryEvent();
    }

    function appendShoes(list, category){

        let getYield = function (item){
            return Math.round(((item.sellPrice/item.releasePrice)-1 ) * 10000) / 100;
        }
        let shoesStatus = {
            '사용중' : '                            <span class="badge rounded-pill bg-success">사용중</span>',
            '리셀'   : '                            <span class="badge rounded-pill bg-info text-dark">리셀</span>',
            '보유중' : '                            <span class="badge rounded-pill bg-warning text-dark">보유중</span>',
        }

        let html = '';
        let categoryAll = category == 'ALL' ? 'bg-primary' : 'bg-secondary';
        let categoryStock = category == 'STOCK' ? 'bg-primary' : 'bg-secondary';
        let categoryResell = category == 'RESELL' ? 'bg-primary' : 'bg-secondary';

        html += '<div class="shoesAll">';
        html += '    <div class="">';
        html += '        <div class="shoes-sortOrder">';
        html += '            <span class="shoesCategory badge rounded-pill '+categoryAll+'">전체</span>';
        html += '            <span class="shoesCategory badge rounded-pill '+categoryStock+'">보유</span>';
        html += '            <span class="shoesCategory badge rounded-pill '+categoryResell+'">리셀</span>';
        html += '        </div>';
        html += '        <div class="shoes-content">';
        html += '            <table class="table table-hover">';
        html += '              <tr hidden>';
        html += '                <th></th>';
        html += '                <th></th>';
        html += '                <th></th>';
        html += '              </tr>';
        $.each(list,function (idx,item){
            html += '                <tr class="shoes">';
            html += '                    <td class="shoesMain"><div><img src="/images/'+item.mainImage+'"></div></td>';
            html += '                    <td>';
            html += '                        <p>';
            html += '                            <span>'+item.purchaseDate+'</span>';
            html += shoesStatus[item.status];
            html += '                        </p>';
            html += '                        <p><span>'+item.brand+'</span><br/><span>'+item.name+'</span><br/><span>'+item.productCode+'</span></p>';
            html += '                        <p> size : '+item.size+'</p>';
            html += '                        <p> 구입처 : '+item.buy+'</p>';
            html += '                        <p> 발매가 : '+item.releasePrice+'원 / 구매가: ---원 / 리셀가 : '+item.sellPrice+'원 (' + getYield(item) + '%)</p>';
            html += '                        <p>'+item.content+'</p>';
            html += '                    </td>';
            html += '                    <td>';
            $.each(item.imageList, function (idx, item){
                html += '                        <img src="/images/'+item+'" class="img-thumbnail" alt="...">';
            })
            html += '                    </td>';
            html += '                </tr>';
        })
        html += '            </table>';
        html += '        </div>';
        html += '    </div>';
        html += '</div>';

        $('#contents').append(html);
    }
    // 카테고리별 정리(전체/보유/리셀)
    // -> 최신순 정렬
    function sortShoesList(list, category){
        let retList = [];
        let sCategory;
        if(category == 'ALL'){
            sCategory = '전체';
        }else if(category == 'RESELL'){
            sCategory = '리셀';
        }else if(category == 'STOCK'){
            sCategory = '사용중,보유중';
        }
        $.each(list, function (idx,item){
            if(sCategory == '전체'){
                retList = list;
                return;
            }
            if(sCategory.indexOf(item.status) > -1){
                retList.push(item);
            }
        })
        retList.sort(function (a,b){
            return b.purchaseDateS8 -a.purchaseDateS8;
        })
        return retList;
    }
    function addCategoryEvent(){
        $('.shoesCategory').off().on('click',function (ret){
            let selCategory = this.textContent;
            if(selCategory == '전체'){loadShoesList(sortShoesList(shoesList, 'ALL'), 'ALL');}
            else if(selCategory =='보유'){ loadShoesList(sortShoesList(shoesList, 'STOCK'), 'STOCK');}
            else if(selCategory == '리셀'){ loadShoesList(sortShoesList(shoesList, 'RESELL'), 'RESELL')}
        });
    }

    function getInstagramList(){
        if(instagramList!=undefined){
            $('#contents').text('##### tennis contents #####');
            appendInstagram(instagramList);
            return;
        }
        var successCallBack = function (ret){
            console.log("##인스타불러오기 성공##",ret);
            $('#contents').text('##### tennis contents #####');
            instagramList = sortVideoList(ret.data);
            appendInstagram(instagramList);
        }

        let url = 'https://graph.instagram.com/17841406368962723/media?fields=id,media_type,media_url,permalink,thumbnail_url,username,caption&access_token=IGQVJVcnlEa25CY1owM05fcjNkN1dzenc4MUx1NVRYeWNRRHlXejV5d2g1MTViWjRSWE9nSm5NOTFTdUR6QTJPZAFpYYmN5VGs5bURPenIxMHp5UWE1MElxdUVobnNSSWcwQm9oMUtB';
        wbGetJson(successCallBack,function (ret){
            console.log("##인스타불러오기 실패##",ret);
            alert('오류로 인해 실패했습니다.');
            debugger;
        },url);
    }

    function sortVideoList(list){
        let retList = [];
        $.each(list,function (idx,item){
            if(item.media_type == 'VIDEO'){
                retList.push(item);
            }
        });
        return retList;
    }
    
    function appendInstagram(list){
        let html = "";
        html += '<div id="instaWrapper">';
        $.each(list,function (idx,item) {
            let caption = item.caption.replaceAll('\n','<br>');
            html += '    <div class="instagram-All">';
            html += '        <div class="instagram-title">';
            html += '            <img src="/image/app/logo_instagram.png">';
            html += '                <span class="instagram-username" onclick="goUrl(\''+item.permalink+'\')">'+item.username+'</span>';
            html += '        </div>';
            html += '        <div class="instagram-media">';
            html += '            <video src="'+item.media_url+'" controls id="realsVideo"></video>';
            html += '        </div>';
            html += '        <div class="instagram-content">';
            html += '            <span class="instagram-username" onclick="goUrl(\''+item.permalink+'\')">'+item.username+'</span>';
            html += '            <span class="instagram-caption">'+caption+'</span>';
            html += '        </div>';
            html += '    </div>';
        });
        html += '</div>';
        $('#contents').append(html);
    }

    function goUrl(url){
        location.href = url;
    }
</script>


{{>layout/footer}}